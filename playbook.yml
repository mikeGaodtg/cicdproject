---
- hosts: webservers
  become: yes
  tasks:
    - name: Update all packages
      dnf:
        name: '*'
        state: latest
        update_only: yes

    # Install Docker and dependencies
    - name: Add Docker repository
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker and dependencies
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python3-pip
        state: present

    # Modified Python Docker SDK installation
    - name: Remove existing docker package if installed via pip
      pip:
        name: docker
        state: absent
      ignore_errors: yes

    - name: Install Python Docker SDK using pip
      pip:
        name: docker
        state: present
        extra_args: --ignore-installed

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    # Docker tasks
    - name: Pull React app Docker image
      community.docker.docker_image:
        name: "wsztg008/react-app"
        source: pull
        tag: latest

    - name: Run React app container
      community.docker.docker_container:
        name: react-app
        image: "wsztg008/react-app:latest"
        state: started
        restart_policy: always
        ports:
          - "81:80"

    # NGINX tasks
    - name: Install NGINX
      dnf:
        name: nginx
        state: present

    - name: Create custom index.html
      copy:
        content: "<html><body><h1>Hello World! from git hub</h1></body></html>"
        dest: /usr/share/nginx/html/index.html

    - name: Start NGINX
      service:
        name: nginx
        state: started
        enabled: yes

    # Firewall configuration
    - name: Install firewalld
      dnf:
        name: firewalld
        state: present

    - name: Start and enable firewalld
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: Allow HTTP through firewall
      firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes
      ignore_errors: yes

    - name: Allow port 81 through firewall
      firewalld:
        port: 81/tcp
        permanent: yes
        state: enabled
        immediate: yes
      ignore_errors: yes
